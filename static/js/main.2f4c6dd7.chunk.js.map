{"version":3,"sources":["components/List.jsx","components/Details.jsx","App.js","reportWebVitals.js","index.js"],"names":["List","handleProfile","useState","names","setNames","select","setSelect","useEffect","axios","get","process","then","res","data","catch","err","console","log","className","map","id","name","onClick","handleSelect","shortid","generate","Details","info","setData","src","avatar","alt","Object","keys","details","key","App","profile","setProfile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA0CeA,EArCF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACRC,mBAAS,IADD,mBAC3BC,EAD2B,KACpBC,EADoB,OAENF,mBAAS,IAFH,mBAE3BG,EAF2B,KAEnBC,EAFmB,KAIlCC,qBAAU,WACRC,IACGC,IADH,UACUC,uGADV,eAEGC,MAAK,SAACC,GAAD,OAASR,EAASQ,EAAIC,SAC3BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,IAOH,OACE,qBAAKG,UAAU,WAAf,SACE,qBAAKA,UAAU,kCAAf,SACGf,EAAMgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACT,qBACEH,UAAS,wBAAmBE,IAAOf,EAAS,SAAW,IAEvDiB,QAAS,kBAZE,SAACF,EAAIC,GACxBf,EAAUc,GACVnB,EAAcmB,EAAIC,GAUKE,CAAaH,EAAIC,IAHlC,SAKE,qBAAKH,UAAU,SAAf,SAAyBG,KAHpBG,IAAQC,oBCgBVC,EAtCC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACJzB,mBAAS,MADL,mBACrBW,EADqB,KACfe,EADe,KAY5B,OATArB,qBAAU,WACHoB,EAAKP,IAEVZ,IACGC,IADH,UACUC,wGADV,OAC8CiB,EAAKP,GADnD,UAEGT,MAAK,SAACC,GAAD,OAASgB,EAAQhB,EAAIC,SAC1BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAACY,EAAKP,GAAIP,IAERA,EAGH,sBAAKK,UAAU,cAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKW,IAAKhB,EAAKiB,OAAQC,IAAI,aAE7B,sBAAKb,UAAU,UAAf,UACE,mBAAGA,UAAU,SAAb,SAAuBL,EAAKQ,OAC3BW,OAAOC,KAAKpB,EAAKqB,SAASf,KAAI,SAACgB,GAAD,OAC7B,sBAAKjB,UAAU,cAAf,UACE,4BAAIiB,IADN,KACiBtB,EAAKqB,QAAQC,KADIX,IAAQC,qBAVhC,MCULW,MAvBf,WAAgB,IAAD,EACiBlC,mBAAS,CAAEkB,GAAI,KAAMC,KAAM,KAD5C,mBACNgB,EADM,KACGC,EADH,KAOb,OACE,qBAAKpB,UAAU,MAAf,SACE,qBAAKA,UAAU,gCAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,CAAMjB,cATM,SAACmB,EAAIC,GACzBiB,EAAW,CAAElB,KAAIC,cAUX,qBAAKH,UAAU,oBAAf,SACGmB,EAAU,cAAC,EAAD,CAASV,KAAMU,IAAc,eCPrCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2f4c6dd7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport shortid from \"shortid\";\n\nconst List = ({ handleProfile }) => {\n  const [names, setNames] = useState([]);\n  const [select, setSelect] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_INITIAL_URL}users.json`)\n      .then((res) => setNames(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  const handleSelect = (id, name) => {\n    setSelect(id);\n    handleProfile(id, name);\n  };\n\n  return (\n    <div className=\"ui basic\">\n      <div className=\"ui vertical menu button primary\">\n        {names.map(({ id, name }) => (\n          <div\n            className={`link red item ${id === select ? \"active\" : \"\"}`}\n            key={shortid.generate()}\n            onClick={() => handleSelect(id, name)}\n          >\n            <div className=\"header\">{name}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nList.propTypes = {\n  handleProfile: PropTypes.func.isRequired,\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport axios from \"axios\";\n\nconst Details = ({ info }) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    if (!info.id) return;\n\n    axios\n      .get(`${process.env.REACT_APP_INITIAL_URL}${info.id}.json`)\n      .then((res) => setData(res.data))\n      .catch((err) => console.log(err));\n  }, [info.id, data]);\n\n  if (!data) return null;\n\n  return (\n    <div className=\"ui red card\">\n      <div className=\"image\">\n        <img src={data.avatar} alt=\"avatar\" />\n      </div>\n      <div className=\"content\">\n        <p className=\"header\">{data.name}</p>\n        {Object.keys(data.details).map((key) => (\n          <div className=\"description\" key={shortid.generate()}>\n            <b>{key}</b>: {data.details[key]}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nDetails.propTypes = {\n  info: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n  }),\n};\n\nexport default Details;\n\n","import React, { useState } from \"react\";\nimport List from \"./components/List\";\nimport Details from \"./components/Details\";\n\nfunction App() {\n  const [profile, setProfile] = useState({ id: null, name: \"\" });\n\n  const handleProfile = (id, name) => {\n    setProfile({ id, name });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"ui raised very text container\">\n        <div className=\"ui grid\">\n          <div className=\"eight wide column\">\n            <List handleProfile={handleProfile} />\n          </div>\n          <div className=\"eight wide column\">\n            {profile ? <Details info={profile} /> : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}